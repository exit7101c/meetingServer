package cronies.meeting.user.controller;

import cronies.meeting.user.service.AlarmService;
import cronies.meeting.user.service.ContestService;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.ui.ModelMap;
import org.springframework.web.bind.annotation.*;

import java.util.HashMap;
import java.util.List;

@RestController
public class ContestController {

    @Autowired
    private ContestService contestService;

    /**
     * 콘테스트 참여여부 체크
    **/
    @RequestMapping(value = "getContestCheck", method = { RequestMethod.GET, RequestMethod.POST })
    @ResponseBody
    public HashMap<String, Object> getContestCheck(@RequestParam HashMap<String, Object> param) throws Exception {
        return contestService.getContestCheck(param);
    }

    /**
     * 콘테스트 참여
     **/
    @RequestMapping(value = "getContestSupport", method = { RequestMethod.GET, RequestMethod.POST })
    @ResponseBody
    public HashMap<String, Object> getContestSupport(@RequestParam HashMap<String, Object> param) throws Exception {
        return contestService.getContestSupport(param);
    }

    /**
     * 콘테스트 참여중인 유저 리스트
     **/
    @RequestMapping( value="getContestUserList", method = {RequestMethod.GET, RequestMethod.POST})
    @ResponseBody
    public List<HashMap<String, Object>> getContestUserList(@RequestParam HashMap<String, Object> param, ModelMap model) throws Exception {
        return contestService.getContestUserList(param);
    }

    /**
     * 콘테스트 상세 페이지 조회
     **/
    @RequestMapping(value = "getContestDetail", method = { RequestMethod.GET, RequestMethod.POST })
    @ResponseBody
    public HashMap<String, Object> getContestDetail(@RequestParam HashMap<String, Object> param) throws Exception {
        return contestService.getContestDetail(param);
    }

    /**
     * 콘테스트 댓글 INFINITE 조회
     **/
    @RequestMapping( value="getContestReplyInfinite", method = {RequestMethod.GET, RequestMethod.POST})
    @ResponseBody
    public List<HashMap<String, Object>> getContestReplyInfinite(@RequestParam HashMap<String, Object> param, ModelMap model) throws Exception {
        return contestService.getContestReplyInfinite(param);
    }

}
