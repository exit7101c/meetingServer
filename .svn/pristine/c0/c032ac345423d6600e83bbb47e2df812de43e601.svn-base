<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="nse.pms.basic.sqlPlant">
	
	<!--
	QueryID     : selectPlantList
	Description : Plant 정보 결과 조회
	-->
	<select id="selectPlantList" parameterType="HashMap" resultType="ExqueryMap" >
		SELECT PLANT_CD
		     , PLANT_NM
             , PLANT_DESC
		     , ENTERPRISE_CD
             , ENTERPRISE_NM
		     , REMARKS AS REMARKS
			 , USE_YN
			 , CREATED_DT
			 , CREATED_USER_ID
			 , UPDATED_DT
			 , UPDATED_USER_ID	
			 , ROWNUM AS NO
		  FROM ( 	
				SELECT PLT.PLANT_CD AS PLANT_CD
				     , FN_GET_MSG(PLT.PLANT_NM, #{lang}) AS PLANT_NM
		             , PLT.PLANT_DESC AS PLANT_DESC
				     , ENT.ENTERPRISE_CD AS ENTERPRISE_CD
		             , FN_GET_MSG(ENT.ENTERPRISE_NM, #{lang}) AS ENTERPRISE_NM
				     , PLT.REMARKS AS REMARKS
					 , FN_GET_COMMCODE_NAME(#{lang}, 'USE_YN', PLT.USE_YN) AS USE_YN
					 , TO_CHAR(PLT.CREATED_DT,'YYYY-MM-DD HH24:MI:SS') AS CREATED_DT
					 , PLT.CREATED_USER_ID
					 , TO_CHAR(PLT.UPDATED_DT,'YYYY-MM-DD HH24:MI:SS') AS UPDATED_DT
					 , PLT.UPDATED_USER_ID	
				  FROM COM_PLANT PLT
		    INNER JOIN COM_ENTERPRISE ENT
		            ON PLT.ENTERPRISE_CD = ENT.ENTERPRISE_CD
				  <where>
					<if test='searchStr1 != null and  searchStr1 != ""'>
						AND (PLT.PLANT_CD LIKE '%${searchStr1}%' OR FN_GET_MSG(PLT.PLANT_NM, #{lang}) LIKE '%${searchStr1}%')
					</if>
					<if test='useYn != null and  useYn != ""'>
						AND PLT.USE_YN = #{useYn}
					</if>
				</where>
				ORDER BY PLT.PLANT_CD ASC)
	</select>
	
	<!--
	QueryID     : selectPlantOne
	Description : Plant 정보 상세 단건 조회
	-->	
	<select id="selectPlantOne" parameterType="HashMap" resultType="ExqueryMap" >
		SELECT PLANT_CD
		     , FN_LANG_INP(PLANT_NM,'en') AS PLANT_NM_EN 	-- 영어
		  	 , FN_LANG_INP(PLANT_NM,'ko') AS PLANT_NM_KO 	-- 영어
          	 , FN_LANG_INP(PLANT_NM,'cn') AS PLANT_NM_CN 	-- 중국어
          	 , PLANT_DESC
		     , ENTERPRISE_CD
		     , REMARKS		     
			 , USE_YN
			 , CREATED_DT
			 , CREATED_USER_ID
			 , UPDATED_DT
			 , UPDATED_USER_ID
		  FROM COM_PLANT
		 WHERE PLANT_CD =  #{selectKey}
	</select>
		
	<!--
	QueryID     : insertPlant
	Description : Plant 정보 등록
	-->	
	<insert id="insertPlant" parameterType="HashMap" >
		INSERT INTO COM_PLANT (
								PLANT_CD
							  , PLANT_NM
							  , PLANT_DESC
							  , ENTERPRISE_CD							  
							  , USE_YN
							  , CREATED_DT
							  , CREATED_USER_ID
							  , UPDATED_DT
							  , UPDATED_USER_ID
							) VALUES (
								#{plantCd}
							  , #{plantNm}
							  , #{plantDesc}
							  , #{enterpriseCd}
							  , #{useYn}
							  , SYSDATE
							  , #{ssUserId}
					          , SYSDATE
					          , #{ssUserId}
							)
	</insert>
	
	<!--
	QueryID     : updatePlant
	Description : Plant 정보 수정
	-->	
	<update id="updatePlant" parameterType="HashMap" >
		UPDATE COM_PLANT
		<set>
			  PLANT_NM = #{plantNm}
			, PLANT_DESC = #{plantDesc}
			, ENTERPRISE_CD = #{enterpriseCd}
			, USE_YN = #{useYn}
			, UPDATED_DT = SYSDATE
			, UPDATED_USER_ID = #{ssUserId}
		</set>
		WHERE PLANT_CD = #{plantCd}
	</update>
	
	<!--
	QueryID     : updatePlant
	Description : Plant 정보 삭제
	-->	
	<update id="deletePlant" parameterType="HashMap" >
		UPDATE COM_PLANT
		<set>
			  USE_YN = 'N'
			, UPDATED_DT = SYSDATE
			, UPDATED_USER_ID = #{ssUserId}
		</set>
		WHERE PLANT_CD = #{plantCd}
	</update>


</mapper>
