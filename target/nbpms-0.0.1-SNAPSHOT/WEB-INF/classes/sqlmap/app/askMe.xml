<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="cronies.app.askMe">

	<select id="getAskMeCode" parameterType="HashMap" resultType="ExqueryMap">
		SELECT
			A.NICK
			, B.ASK_ME_CODE
			, ISNULL(B.VIEW_CNT, 0) AS VIEW_CNT
			, ISNULL(B.RECEIVED_CNT, 0) AS RECEIVED_CNT
			, ISNULL(B.SCORE_SUM, 0) AS SCORE_SUM
			, ISNULL(ROUND(B.SCORE_AVG, 0), 0) AS SCORE_AVG
			, B.UPD_TIME
		FROM SC_USER A
		LEFT OUTER JOIN SC_ASKME_USER B
			ON A.USER_ID = B.USER_ID
		WHERE 1=1
		  AND A.USER_ID = #{userId}
	</select>

    <select id="getAskMeList" parameterType="HashMap" resultType="ExqueryMap">
		SELECT *
		FROM (
			SELECT TOP 100 PERCENT
				A.SCORE
				, A.DO
				, A.THINK
				, MESSAGE
				, CONVERT(CHAR(19), REG_TIME, 20) AS REG_TIME
				, ROW_NUMBER() OVER(ORDER BY A.REG_TIME DESC) AS ROWNUM
			FROM SC_ASKME A
			WHERE 1=1
			AND A.USER_ID = #{userId}
			ORDER BY A.REG_TIME DESC
		 ) A
    </select>

	<select id="isAskMeCode" parameterType="HashMap" resultType="ExqueryMap">
		SELECT
			USER_ID
		FROM SC_ASKME_USER
		WHERE 1=1
		AND ASK_ME_CODE = #{askMeCode}
	</select>

	<select id="getAskMeUserInfo" parameterType="HashMap" resultType="ExqueryMap">
		SELECT TOP 1
			A.USER_ID AS USER_KEY
			, A.NICK
			, D.SERVER_IP + '/' + D.FILE_PATH + D.SERVER_FILE_NM AS CDN_NM
			, D.SERVER_IP + '/' + D.FILE_PATH + D.THUMB_FILE_NM AS CDN_THUMB_NM
		FROM SC_USER A
		INNER JOIN SC_ASKME_USER B
		ON A.USER_ID = B.USER_ID
		AND B.ASK_ME_CODE = #{askMeCode}
	   	LEFT OUTER JOIN SC_USER_PIC C
	   	ON A.USER_ID = C.USER_ID
	   	LEFT OUTER JOIN SC_ATTACH_FILE D
	   	ON C.PHOTO1 = D.ATTACH_FILE_ID
	</select>

	<update id="mergeUserAskMeCode" parameterType="HashMap">
		MERGE INTO SC_ASKME_USER AS A
		USING (SELECT 1 AS DUAL) AS B
		ON (A.USER_ID = #{userId})
		WHEN MATCHED THEN
			UPDATE SET
				ASK_ME_CODE = #{askMeCode}
				, UPD_TIME = GETDATE()
		WHEN NOT MATCHED THEN
			INSERT
				(USER_ID
				, ASK_ME_CODE
				, VIEW_CNT
				, RECEIVED_CNT
				, SCORE_SUM
				, SCORE_AVG
				, TODAY_CNT
				, UPD_TIME
				)
			VALUES
				(#{userId}
				, #{askMeCode}
				, 0
				, 0
				, 0
				, 0
				, 0
				, GETDATE()
				);
	</update>

	<update id="updateAskMeUserViewCnt" parameterType="HashMap">
		UPDATE SC_ASKME_USER
			SET VIEW_CNT = VIEW_CNT + 1
		WHERE USER_ID = #{userId}
	</update>

	<insert id="insertAskMe" parameterType="HashMap">
		INSERT INTO SC_ASKME
		    (USER_ID, SCORE, DO, THINK, MESSAGE, REG_TIME, IP_ADDR)
		VALUES
		   	(#{userId}, #{score}, #{do}, #{think}, #{message}, GETDATE(), #{ipAddr})
	</insert>

	<update id="updateAskMeUserCurrentInfo" parameterType="HashMap">
		UPDATE SC_ASKME_USER
			SET RECEIVED_CNT = RECEIVED_CNT + 1
				, SCORE_SUM = SCORE_SUM + CONVERT(NUMERIC, #{score})
				, SCORE_AVG = (SCORE_SUM + CONVERT(NUMERIC, #{score})) / (RECEIVED_CNT + 1)
				, TODAY_CNT = TODAY_CNT + 1
				, UPD_TIME = GETDATE()
		WHERE USER_ID = #{userId}
	</update>

	<select id="getAskMeBeforeSend" parameterType="HashMap" resultType="ExqueryMap">
		SELECT
			IP_ADDR
		FROM SC_ASKME
		WHERE 1=1
		  AND REG_TIME > DATEADD(HH, -1, GETDATE())
		  AND USER_ID = #{userId}
		  AND IP_ADDR = #{ipAddr}
	</select>

</mapper>
